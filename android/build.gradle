plugins {
    id "com.android.library"
}

android {
    compileSdkVersion "$target_sdk" as int

    defaultConfig {
        minSdkVersion "$min_sdk" as int
        targetSdkVersion "$target_sdk" as int
        versionName project.version
        consumerProguardFiles 'consumer-proguard-rules.pro'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api project(':java')

    implementation "androidx.annotation:annotation:$androidx"
    implementation "androidx.collection:collection:$androidx"
    implementation "androidx.core:core:$androidx"
}

afterEvaluate {
    tasks.register("javadoc", Javadoc) {
        source += android.sourceSets.main.java.sourceFiles
        source += project(':java').layout.files('src/main/java')
        classpath += files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.releaseCompileClasspath
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
        inputs.files(javaPreCompileRelease)
        outputs.dir(destinationDir)
    }

    tasks.register("sourcesJar", Jar) {
        archiveClassifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    publishing {
        publications {
            "$project.name"(MavenPublication) {
                from components.release

                artifact sourcesJar
                artifact javadocJar

                groupId = "$group_id"
                artifactId = project.name
                version = project.version
            }
        }
    }
}